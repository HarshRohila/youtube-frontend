/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults, RouterHistory } from "@stencil-community/router";
import { IAppError } from "./lib/redux/global";
import { IconDefinition } from "@fortawesome/free-solid-svg-icons";
import { IconDefinition as IconDefinition1 } from "@fortawesome/fontawesome-svg-core";
export namespace Components {
    interface AppHome {
        "history": RouterHistory;
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface ErrorPage {
        "error": IAppError;
    }
    interface IconBtn {
        "icon": IconDefinition;
        "label": string;
    }
    interface LoadingPage {
    }
    interface SearchPage {
        "history": RouterHistory;
    }
    interface TrendingPage {
        "history": RouterHistory;
    }
    interface VideoPage {
        "history": RouterHistory;
        "match": MatchResults;
    }
    interface VideoPlayer {
        "src": string;
    }
    interface XIcon {
        "icon": IconDefinition;
        "mask"?: IconDefinition;
        "size"?: string;
        "spin": boolean;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLErrorPageElement extends Components.ErrorPage, HTMLStencilElement {
    }
    var HTMLErrorPageElement: {
        prototype: HTMLErrorPageElement;
        new (): HTMLErrorPageElement;
    };
    interface HTMLIconBtnElement extends Components.IconBtn, HTMLStencilElement {
    }
    var HTMLIconBtnElement: {
        prototype: HTMLIconBtnElement;
        new (): HTMLIconBtnElement;
    };
    interface HTMLLoadingPageElement extends Components.LoadingPage, HTMLStencilElement {
    }
    var HTMLLoadingPageElement: {
        prototype: HTMLLoadingPageElement;
        new (): HTMLLoadingPageElement;
    };
    interface HTMLSearchPageElement extends Components.SearchPage, HTMLStencilElement {
    }
    var HTMLSearchPageElement: {
        prototype: HTMLSearchPageElement;
        new (): HTMLSearchPageElement;
    };
    interface HTMLTrendingPageElement extends Components.TrendingPage, HTMLStencilElement {
    }
    var HTMLTrendingPageElement: {
        prototype: HTMLTrendingPageElement;
        new (): HTMLTrendingPageElement;
    };
    interface HTMLVideoPageElement extends Components.VideoPage, HTMLStencilElement {
    }
    var HTMLVideoPageElement: {
        prototype: HTMLVideoPageElement;
        new (): HTMLVideoPageElement;
    };
    interface HTMLVideoPlayerElement extends Components.VideoPlayer, HTMLStencilElement {
    }
    var HTMLVideoPlayerElement: {
        prototype: HTMLVideoPlayerElement;
        new (): HTMLVideoPlayerElement;
    };
    interface HTMLXIconElement extends Components.XIcon, HTMLStencilElement {
    }
    var HTMLXIconElement: {
        prototype: HTMLXIconElement;
        new (): HTMLXIconElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "error-page": HTMLErrorPageElement;
        "icon-btn": HTMLIconBtnElement;
        "loading-page": HTMLLoadingPageElement;
        "search-page": HTMLSearchPageElement;
        "trending-page": HTMLTrendingPageElement;
        "video-page": HTMLVideoPageElement;
        "video-player": HTMLVideoPlayerElement;
        "x-icon": HTMLXIconElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
        "history"?: RouterHistory;
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface ErrorPage {
        "error"?: IAppError;
    }
    interface IconBtn {
        "icon"?: IconDefinition;
        "label"?: string;
        "onBtnClicked"?: (event: CustomEvent<void>) => void;
    }
    interface LoadingPage {
    }
    interface SearchPage {
        "history"?: RouterHistory;
    }
    interface TrendingPage {
        "history"?: RouterHistory;
    }
    interface VideoPage {
        "history"?: RouterHistory;
        "match"?: MatchResults;
    }
    interface VideoPlayer {
        "src"?: string;
    }
    interface XIcon {
        "icon"?: IconDefinition;
        "mask"?: IconDefinition;
        "size"?: string;
        "spin"?: boolean;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "error-page": ErrorPage;
        "icon-btn": IconBtn;
        "loading-page": LoadingPage;
        "search-page": SearchPage;
        "trending-page": TrendingPage;
        "video-page": VideoPage;
        "video-player": VideoPlayer;
        "x-icon": XIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "error-page": LocalJSX.ErrorPage & JSXBase.HTMLAttributes<HTMLErrorPageElement>;
            "icon-btn": LocalJSX.IconBtn & JSXBase.HTMLAttributes<HTMLIconBtnElement>;
            "loading-page": LocalJSX.LoadingPage & JSXBase.HTMLAttributes<HTMLLoadingPageElement>;
            "search-page": LocalJSX.SearchPage & JSXBase.HTMLAttributes<HTMLSearchPageElement>;
            "trending-page": LocalJSX.TrendingPage & JSXBase.HTMLAttributes<HTMLTrendingPageElement>;
            "video-page": LocalJSX.VideoPage & JSXBase.HTMLAttributes<HTMLVideoPageElement>;
            "video-player": LocalJSX.VideoPlayer & JSXBase.HTMLAttributes<HTMLVideoPlayerElement>;
            "x-icon": LocalJSX.XIcon & JSXBase.HTMLAttributes<HTMLXIconElement>;
        }
    }
}
